version: '3.8'

services:
  app:
    healthcheck:
      test: ["CMD", "php", "artisan", "migrate:status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel12_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/conf.d/99-local.ini:/usr/local/etc/php/conf.d/99-local.ini
      # - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    container_name: laravel12_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - laravel
    depends_on:
      - app

  db:
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    image: mysql:8.0
    container_name: laravel12_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: db-laravel-latihan
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3310:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel
    command: --default-authentication-plugin=mysql_native_password

  redis:
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    image: redis:7-alpine
    container_name: laravel12_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - laravel

  queue:
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[a]rtisan queue:work' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel12_queue
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'      # Max 50% of 1 CPU
          memory: 512M     # Max RAM
        reservations:
          cpus: '0.25'
          memory: 256M
    command: php artisan queue:work --tries=3 --timeout=90 --max-jobs=1000 --max-time=3600
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel
    depends_on:
      - db
      - redis

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel12_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel
    depends_on:
      - db
      - redis

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
    driver: local